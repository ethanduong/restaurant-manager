/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import static commonfunction.Common.removeAccent;
import dal.dao.ItemClassJpaController;
import dal.dao.MenuItemJpaController;
import dal.entity.ItemClass;
import dal.entity.MenuItem;
import java.awt.Font;
import java.math.BigDecimal;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jame Moriarty
 */
public class Pnl_MenuItem_List extends javax.swing.JPanel {

    /**
     * Creates new form MenuItem_List
     */
    ItemClass itc = new ItemClass();
    List<MenuItem> menulist;
    MenuItem item = new MenuItem();
    List<ItemClass> classlist;

    public Pnl_MenuItem_List() {
        initComponents();
        showtable();
        loadcbx();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblItemName = new javax.swing.JLabel();
        txtitemName = new javax.swing.JTextField();
        lblItemclass = new javax.swing.JLabel();
        cbxitemClass = new javax.swing.JComboBox();
        lblitemprice = new javax.swing.JLabel();
        fmtxtitemPrice = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thực Đơn - Danh Sách Món Ăn - Đồ Uống");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridLayout(3, 2));

        lblItemName.setBackground(new java.awt.Color(255, 255, 255));
        lblItemName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblItemName.setForeground(new java.awt.Color(51, 51, 51));
        lblItemName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItemName.setText("Tên Món");
        lblItemName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.add(lblItemName);

        txtitemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtitemName.setForeground(new java.awt.Color(51, 51, 51));
        jPanel7.add(txtitemName);

        lblItemclass.setBackground(new java.awt.Color(255, 255, 255));
        lblItemclass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblItemclass.setForeground(new java.awt.Color(51, 51, 51));
        lblItemclass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItemclass.setText("Loại");
        lblItemclass.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.add(lblItemclass);

        cbxitemClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxitemClass.setForeground(new java.awt.Color(51, 51, 51));
        jPanel7.add(cbxitemClass);

        lblitemprice.setBackground(new java.awt.Color(255, 255, 255));
        lblitemprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblitemprice.setForeground(new java.awt.Color(51, 51, 51));
        lblitemprice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblitemprice.setText("Giá tiền");
        lblitemprice.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.add(lblitemprice);

        fmtxtitemPrice.setColumns(10);
        fmtxtitemPrice.setForeground(new java.awt.Color(51, 51, 51));
        fmtxtitemPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        fmtxtitemPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(fmtxtitemPrice);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridLayout(4, 1));

        btnInsert.setBackground(new java.awt.Color(204, 204, 204));
        btnInsert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(51, 51, 51));
        btnInsert.setText("Thêm");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel4.add(btnInsert);

        btnUpdate.setBackground(new java.awt.Color(204, 204, 204));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdate);

        btnDelete.setBackground(new java.awt.Color(204, 204, 204));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(btnDelete);

        btnCancel.setBackground(new java.awt.Color(204, 204, 204));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(51, 51, 51));
        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel4.add(btnCancel);

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_search.setForeground(new java.awt.Color(51, 51, 51));

        btnSearch.setBackground(new java.awt.Color(204, 204, 204));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Tìm Kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(txt_search)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(69, 69, 69))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(207, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(125, Short.MAX_VALUE)))
        );

        tblItem.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblItem.setForeground(new java.awt.Color(51, 51, 51));
        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItem.setIntercellSpacing(new java.awt.Dimension(3, 5));
        tblItem.setRowHeight(25);
        tblItem.getTableHeader().setReorderingAllowed(false);
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        txtitemName.setText(null);
        fmtxtitemPrice.setText(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed

        if (validateAddItem() == true) {
            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
                MenuItemJpaController dao = new MenuItemJpaController(emf);
                ItemClass selectedItem = (ItemClass) cbxitemClass.getSelectedItem();
                item.setItemName(txtitemName.getText());
                item.setItemPrice(new BigDecimal((long) fmtxtitemPrice.getValue()));
                item.setClassID(selectedItem);
                dao.create(item);
            } catch (Exception ex) {
                Logger.getLogger(Pnl_MenuItem_List.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(new JPanel(), "Giá tiền nhập phải là số !", "Lỗi Nhập Liệu", JOptionPane.ERROR_MESSAGE);
            }
            showtable();
        }
        clearform();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        clearform();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (validateAddItem() == true) {
            if (tblItem.getSelectedRow()<0) {
                JOptionPane.showMessageDialog(null, "Hãy chọn món cần sửa thông tin trong bảng !");
                return;
            }
            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
                MenuItemJpaController dao = new MenuItemJpaController(emf);
                int row = tblItem.getSelectedRow();
                item = (MenuItem)tblItem.getValueAt(row, 1);
                item.setItemName(txtitemName.getText());
                item.setItemPrice(new BigDecimal((long) fmtxtitemPrice.getValue()));
                item.setClassID((ItemClass)cbxitemClass.getSelectedItem());
                dao.edit(item);
            } catch (Exception ex) {
                Logger.getLogger(Pnl_MenuItem_List.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(new JPanel(), "Giá tiền nhập phải là số !", "Lỗi Nhập Liệu", JOptionPane.ERROR_MESSAGE);
            }
            showtable();
        }
        clearform();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        try { 
            long price;           
            int row = tblItem.getSelectedRow();            
            txtitemName.setText(tblItem.getValueAt(row, 1).toString());
            cbxitemClass.setSelectedItem(tblItem.getValueAt(row, 2));
            BigDecimal value = (BigDecimal)tblItem.getValueAt(row, 3);
            price = value.longValueExact();
            fmtxtitemPrice.setValue(price);
        } catch (Exception e) {
            Logger.getLogger(Pnl_MenuItem_List.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_tblItemMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String tex_search = txt_search.getText().trim();
        Vector data = new Vector();
        Vector cols = new Vector();
        cols.addElement("STT");
        cols.addElement("Tên Món Ăn - Đồ Uống");
        cols.addElement("Phân Loại");
        cols.addElement("Giá Tiền");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
        ItemClassJpaController icdao = new ItemClassJpaController(emf);
        MenuItemJpaController dao = new MenuItemJpaController(emf);
        menulist = dao.findMenuItemEntities();
        int i =1;
        for (MenuItem u : menulist) {
            Vector item = new Vector();
            Vector list_search= new Vector();
            list_search.addElement(u.getItemName());
            list_search.addElement(u.getClassID().toString());
            list_search.addElement(u.getItemPrice().toString());
            item.addElement(i);
            item.addElement(u);
            item.addElement(u.getClassID());
            item.addElement(u.getItemPrice());           
            i++;
            if (removeAccent(list_search.toString()).toLowerCase().contains(removeAccent(tex_search).toLowerCase())) {
                data.add(item);
            }
//            System.out.println(u.getItemName()+u.getClassID().toString()+u.getItemPrice().toString());
        }
        DefaultTableModel tbl = (DefaultTableModel) tblItem.getModel();
        tbl.setDataVector(data, cols);
        tblItem.setModel(new DefaultTableModel(data, cols));
        tblItem.getTableHeader().setFont(new Font("Arial", Font.BOLD, 15));
        TableRowSorter<DefaultTableModel> s = new TableRowSorter<DefaultTableModel>(tbl);
        tblItem.setRowSorter(s);
    }//GEN-LAST:event_btnSearchActionPerformed
    public void loadcbx() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
        ItemClassJpaController dao = new ItemClassJpaController(emf);
        classlist = dao.findItemClassEntities();
        for (ItemClass clss : classlist) {
            cbxitemClass.addItem(clss);
        }

    }

    private boolean validateAddItem() {
        if (txtitemName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên Món không được trống !");
            txtitemName.requestFocus();
            return false;
        }
        if (txtitemName.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Tên Món không được quá 50 ký tự !");
            clearform();
            txtitemName.requestFocus();
            return false;
        }
//        if (fmtxtitemPrice.getValue().getClass() == String.class) {
//            JOptionPane.showMessageDialog(null, "Giá tiền phải là số !");
//            return false;
//        }
        return true;
    }

    private void clearform() {
        txtitemName.setText(null);
        fmtxtitemPrice.setText(null);
        txtitemName.requestFocus();
    }

    public void showtable() {
        Vector data = new Vector();
        Vector cols = new Vector();
        cols.addElement("STT");
        cols.addElement("Tên Món Ăn - Đồ Uống");
        cols.addElement("Phân Loại");
        cols.addElement("Giá Tiền");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
        ItemClassJpaController icdao = new ItemClassJpaController(emf);
        MenuItemJpaController dao = new MenuItemJpaController(emf);
        menulist = dao.findMenuItemEntities();
        int i =1;
        for (MenuItem u : menulist) {
            Vector item = new Vector();
            item.addElement(i);
            item.addElement(u);
            item.addElement(u.getClassID());
            item.addElement(u.getItemPrice());
            data.add(item);
            i++;
        }
        DefaultTableModel tbl = (DefaultTableModel) tblItem.getModel();
        tbl.setDataVector(data, cols);
        tblItem.setModel(new DefaultTableModel(data, cols));
        tblItem.getTableHeader().setFont(new Font("Arial", Font.BOLD, 15));
        TableRowSorter<DefaultTableModel> s = new TableRowSorter<DefaultTableModel>(tbl);
        tblItem.setRowSorter(s);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbxitemClass;
    private javax.swing.JFormattedTextField fmtxtitemPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblItemclass;
    private javax.swing.JLabel lblitemprice;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txtitemName;
    // End of variables declaration//GEN-END:variables
}
