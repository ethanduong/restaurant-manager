/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import commonfunction.MD5;
import dal.dao.UsersJpaController;
import dal.dao.exceptions.NonexistentEntityException;
import dal.entity.Users;
import java.awt.Font;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jame Moriarty
 */
public class Pln_User_addNew extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public Users entity = new Users();
    List<Users> Userlst;

    public Pln_User_addNew() {
        initComponents();
        showtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbuserID = new javax.swing.JLabel();
        txtuserID = new javax.swing.JTextField();
        lbpass = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        lbname = new javax.swing.JLabel();
        txtuserName = new javax.swing.JTextField();
        lbIDN = new javax.swing.JLabel();
        txtuserIDN = new javax.swing.JTextField();
        lbadd = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        lbphone = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        lbrole = new javax.swing.JLabel();
        cbxposition = new javax.swing.JComboBox();
        lbemail = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên Đăng Nhập", "Họ Tên", "Số CMT", "Địa chỉ", "Điện thoại", "Email", "chức vụ"
            }
        ));
        tblUser.setIntercellSpacing(new java.awt.Dimension(2, 5));
        tblUser.setRowHeight(25);
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(500, 250));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Thông Tin Người Dùng");
        jLabel2.setPreferredSize(new java.awt.Dimension(800, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12)))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 350));
        jPanel2.setLayout(new java.awt.GridLayout(8, 2));

        lbuserID.setBackground(new java.awt.Color(255, 255, 255));
        lbuserID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbuserID.setForeground(new java.awt.Color(51, 51, 51));
        lbuserID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbuserID.setText("Tên Đăng Nhập:");
        jPanel2.add(lbuserID);
        jPanel2.add(txtuserID);

        lbpass.setBackground(new java.awt.Color(255, 255, 255));
        lbpass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbpass.setForeground(new java.awt.Color(51, 51, 51));
        lbpass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbpass.setText("Mật khẩu");
        jPanel2.add(lbpass);
        jPanel2.add(txtpassword);

        lbname.setBackground(new java.awt.Color(255, 255, 255));
        lbname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbname.setForeground(new java.awt.Color(51, 51, 51));
        lbname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbname.setText("Họ Tên:");
        jPanel2.add(lbname);
        jPanel2.add(txtuserName);

        lbIDN.setBackground(new java.awt.Color(255, 255, 255));
        lbIDN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbIDN.setForeground(new java.awt.Color(51, 51, 51));
        lbIDN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIDN.setText("Số chứng minh thư:");
        jPanel2.add(lbIDN);
        jPanel2.add(txtuserIDN);

        lbadd.setBackground(new java.awt.Color(255, 255, 255));
        lbadd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbadd.setForeground(new java.awt.Color(51, 51, 51));
        lbadd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbadd.setText("Địa chỉ:");
        jPanel2.add(lbadd);
        jPanel2.add(txtaddress);

        lbphone.setBackground(new java.awt.Color(255, 255, 255));
        lbphone.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbphone.setForeground(new java.awt.Color(51, 51, 51));
        lbphone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbphone.setText("Điện thoại:");
        jPanel2.add(lbphone);
        jPanel2.add(txtphone);

        lbrole.setBackground(new java.awt.Color(255, 255, 255));
        lbrole.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbrole.setForeground(new java.awt.Color(51, 51, 51));
        lbrole.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbrole.setText("Chức vụ:");
        jPanel2.add(lbrole);

        cbxposition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nhân Viên", "Quản Lý", " " }));
        jPanel2.add(cbxposition);

        lbemail.setBackground(new java.awt.Color(255, 255, 255));
        lbemail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbemail.setForeground(new java.awt.Color(51, 51, 51));
        lbemail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbemail.setText("Email:");
        jPanel2.add(lbemail);
        jPanel2.add(txtemail);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(150, 250));
        jPanel3.setLayout(new java.awt.GridLayout(4, 1));

        btnInsert.setBackground(new java.awt.Color(255, 255, 255));
        btnInsert.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(51, 51, 51));
        btnInsert.setText("Thêm");
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        jPanel3.add(btnInsert);

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate);

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(btnDelete);

        btnCancel.setBackground(new java.awt.Color(255, 255, 255));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(51, 51, 51));
        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel3.add(btnCancel);

        txtSearch.setPreferredSize(new java.awt.Dimension(500, 40));

        btnSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Tìm Kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // <editor-fold defaultstate="collapsed" desc="Validate Form">

    public boolean validateSubmit(String userid, String Password, String Name, String IDN, String address, String phone, String position, String email) {
        if (userid.length() == 0) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập không được để trống !");
            txtuserID.requestFocus();
            return false;
        }
        if (userid.length() < 6) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập phải có tối thiểu 6 ký tự !");
            txtuserID.requestFocus();
            return false;
        }
        if (userid.length() > 50) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập tối đa 50 ký tự !");
            txtuserID.requestFocus();
            return false;
        }
        if (userid.contains(" ")) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập không được phép có khoảng trắng!");
            txtuserID.requestFocus();
            return false;
        }
        if (Password.contains(" ")) {
            JOptionPane.showMessageDialog(null, "Mật khẩu không được phép có khoảng trắng!");
            txtpassword.requestFocus();
            return false;
        }
        if (Password.length() == 0) {
            JOptionPane.showMessageDialog(null, "Mật khẩu không được để trống !");
            txtpassword.requestFocus();
            return false;
        }
        if (Password.length() < 6) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải có tối thiểu 6 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        if (Password.length() > 50) {
            JOptionPane.showMessageDialog(null, "Mật khẩu tối đa 50 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        if (IDN.length() > 20) {
            JOptionPane.showMessageDialog(null, "Số CMT tối đa 20 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        if (address.length() > 50) {
            JOptionPane.showMessageDialog(null, "Địa chỉ tối đa 50 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        if (phone.length() > 15) {
            JOptionPane.showMessageDialog(null, "Số điện thoại tối đa 15 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        if (email.length() > 50) {
            JOptionPane.showMessageDialog(null, "Email tối đa 50 ký tự !");
            txtpassword.requestFocus();
            return false;
        }
        return true;
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String tex_search = txtSearch.getText().trim();
        Vector data = new Vector();
        Vector cols = new Vector();
        cols.addElement("Tên Đăng Nhập");
        cols.addElement("Họ Tên");
        cols.addElement("Số CMT");
        cols.addElement("Địa Chỉ");
        cols.addElement("Điện Thoại");
        cols.addElement("Chức Vụ");
        cols.addElement("Email");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
        UsersJpaController dao = new UsersJpaController(emf);
        Userlst = dao.findUsersEntities();
        for (Users u : Userlst) {
            Vector user = new Vector();
            user.addElement(u.getUserID());
            user.addElement(u.getUserName());
            user.addElement(u.getUserIDN());
            user.addElement(u.getAddress());
            user.addElement(u.getPhone());
            user.addElement(u.getPosition());
            user.addElement(u.getEmail());
            if (user.toString().toLowerCase().contains((tex_search).toLowerCase())) {
                data.add(user);
            }
        }
        tblUser.setModel(new DefaultTableModel(data, cols));
        clearform();
    }//GEN-LAST:event_btnSearchActionPerformed
    // Sự kiện kích chuột vào bảng user lấy ra dữ liệu từng dòng thêm bảng sửa, thêm mới
    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        int row = tblUser.getSelectedRow();
        String id = tblUser.getValueAt(row, 0).toString();
        txtuserID.setText(tblUser.getValueAt(row, 0).toString());
        //        password.setText(tblUser.getValueAt(row, 1).toString());
        txtuserName.setText(tblUser.getValueAt(row, 1).toString());
        txtuserIDN.setText(tblUser.getValueAt(row, 2).toString());
        txtaddress.setText(tblUser.getValueAt(row, 3).toString());
        txtphone.setText(tblUser.getValueAt(row, 4).toString());
        cbxposition.setSelectedItem(tblUser.getValueAt(row, 5).toString());
        txtemail.setText(tblUser.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tblUserMouseClicked
//      Sự kiện kích chuột thêm mới user
    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked

        if (validateSubmit(txtuserID.getText(), txtpassword.getText(), txtuserName.getText(), txtuserIDN.getText(), txtaddress.getText(), txtphone.getText(), cbxposition.getSelectedItem().toString(), txtemail.getText())) {
            try {
                String Pass = MD5.encryptMD5(txtpassword.getText());
                entity.setUserID(txtuserID.getText());
                try {
                    entity.setPassword(Pass);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                entity.setUserName(txtuserName.getText());
                entity.setUserIDN(txtuserIDN.getText());
                entity.setAddress(txtaddress.getText());
                entity.setPhone(txtphone.getText());
                entity.setPosition(cbxposition.getSelectedItem().toString());
                entity.setEmail(txtemail.getText());
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
                UsersJpaController dao = new UsersJpaController(emf);
                dao.create(entity);
            } catch (Exception ex) {
                Logger.getLogger(Frm_user.class.getName()).log(Level.SEVERE, null, ex);
            }
            showtable();
            clearform();
        }
    }//GEN-LAST:event_btnInsertMouseClicked
    private void clearform() {
        txtuserID.setText(null);
        txtpassword.setText(null);
        txtuserName.setText(null);
        txtuserIDN.setText(null);
        txtaddress.setText(null);
        txtphone.setText(null);
        txtemail.setText(null);
        txtSearch.setText(null);
        txtuserID.requestFocus();
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearform();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = tblUser.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Hãy chọn người cần sửa thông tin trong bảng !");
        } else {
            if (validateSubmit(txtuserID.getText(), txtpassword.getText(), txtuserName.getText(), txtuserIDN.getText(), txtaddress.getText(), txtphone.getText(), cbxposition.getSelectedItem().toString(), txtemail.getText())) {
                int checkpass = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa người này !");
                if (checkpass == JOptionPane.YES_OPTION) {
                    try {
                        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
                        UsersJpaController dao = new UsersJpaController(emf);
                        entity = dao.findUsers(txtuserID.getText());
                        entity.setUserID(txtuserID.getText());
                        String Pass = MD5.encryptMD5(txtpassword.getText());
                        entity.setPassword(Pass);
                        entity.setUserName(txtuserName.getText());
                        entity.setUserIDN(txtuserIDN.getText());
                        entity.setAddress(txtaddress.getText());
                        entity.setPhone(txtphone.getText());
                        entity.setPosition(cbxposition.getSelectedItem().toString());
                        entity.setEmail(txtemail.getText());
                        dao.edit(entity);
                    } catch (Exception ex) {
                        Logger.getLogger(Frm_user.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Hãy chọn người cần sửa thông tin trong bảng !");
                    }
                    showtable();
                    clearform();
                    tblUser.clearSelection();
                } else {
                    clearform();
                    return;
                }

            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblUser.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn người cần xóa thông tin trong bảng !");
            return;
        }
        int checkpass = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa người này !");
        if (checkpass == JOptionPane.YES_OPTION) {
            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
                UsersJpaController dao = new UsersJpaController(emf);
                dao.destroy(txtuserID.getText());
            } catch (NonexistentEntityException ex) {
                JOptionPane.showMessageDialog(this, "Hãy chọn người cần xóa trong bảng !");
                Logger.getLogger(Pln_User_addNew.class.getName()).log(Level.SEVERE, null, ex);
            }
            showtable();
            clearform();
        } else {
            tblUser.clearSelection();
            clearform();
            txtuserID.requestFocus();
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // hàm show dữ liệu ra bảng
    public void showtable() {
        Vector data = new Vector();
        Vector cols = new Vector();
        cols.addElement("Tên Đăng Nhập");
        cols.addElement("Họ Tên");
        cols.addElement("Số CMT");
        cols.addElement("Địa Chỉ");
        cols.addElement("Điện Thoại");
        cols.addElement("Chức Vụ");
        cols.addElement("Email");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestaurantManagermentPU");
        UsersJpaController dao = new UsersJpaController(emf);
        Userlst = dao.findUsersEntities();
        for (Users u : Userlst) {
            Vector user = new Vector();
            user.addElement(u.getUserID());
            user.addElement(u.getUserName());
            user.addElement(u.getUserIDN());
            user.addElement(u.getAddress());
            user.addElement(u.getPhone());
            user.addElement(u.getPosition());
            user.addElement(u.getEmail());
            data.add(user);
        }
        tblUser.setModel(new DefaultTableModel(data, cols));
        tblUser.getTableHeader().setFont(new Font("Arial", Font.BOLD, 14));
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tblUser.setDefaultRenderer(String.class, centerRenderer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbxposition;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbIDN;
    private javax.swing.JLabel lbadd;
    private javax.swing.JLabel lbemail;
    private javax.swing.JLabel lbname;
    private javax.swing.JLabel lbpass;
    private javax.swing.JLabel lbphone;
    private javax.swing.JLabel lbrole;
    private javax.swing.JLabel lbuserID;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtemail;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtuserID;
    private javax.swing.JTextField txtuserIDN;
    private javax.swing.JTextField txtuserName;
    // End of variables declaration//GEN-END:variables
}
